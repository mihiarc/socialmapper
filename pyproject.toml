[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "socialmapper"
version = "0.5.4"
description = "An open-source Python toolkit that helps understand community connections through mapping demographics and access to points of interest"
readme = "README.md"
requires-python = ">=3.11,<3.14"
license = {file = "LICENSE"}
authors = [
    {name = "mihiarc", email = "mihiarc@example.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: GIS",
]
keywords = ["gis", "mapping", "demographics", "census", "OpenStreetMap"]
dependencies = [
    "geopandas>=0.12.0",
    "pandas>=1.5.0",
    "numpy>=2.0.0",
    "requests>=2.28.0",
    "python-dotenv>=0.21.0",
    "scipy>=1.15.2",
    "overpy>=0.6",
    "osmnx>=1.2.2",
    "shapely>=2.0.0",
    "networkx>=2.8.0",
    "cenpy>=1.0.0",
    "mapclassify>=2.4.0",
    "pyyaml>=6.0",
    "pyogrio>=0.6.0",
    "pyarrow>=12.0.0",
    "tqdm>=4.67.0",
    "httpx>=0.27.0",
    "ratelimit",
    "psutil>=5.8.0",
    "pyproj>=3.0.0",
    "numba>=0.61.0",
    "polars>=0.20.0",
    "pydantic>=2.0.0",
    "rich>=13.0.0",
    "matplotlib>=3.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "ruff>=0.0.290",
]

[project.urls]
"Homepage" = "https://github.com/mihiarc/socialmapper"
"Bug Tracker" = "https://github.com/mihiarc/socialmapper/issues"

[project.scripts]
socialmapper = "socialmapper.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["socialmapper"]
include = [
    "socialmapper/data/neighbors/*.parquet",
]

[tool.hatch.build.targets.wheel.shared-data]
"socialmapper/data" = "socialmapper/data"

[tool.black]
line-length = 100
target-version = ["py39"]

[tool.isort]
profile = "black"
line_length = 100

[tool.ruff]
line-length = 100
target-version = "py312"
select = ["E", "F", "B", "I"]

[tool.pytest.ini_options]
markers = [
    "unit: marks tests as unit tests (fast, isolated)",
    "integration: marks tests as integration tests (slower, may use external resources)",
    "slow: marks tests as slow running (may take several seconds)",
    "api: marks tests for new API components",
    "async: marks tests that use async/await",
    "asyncio: marks tests that use asyncio",
    "performance: marks tests that measure performance",
    "benchmark: marks tests that measure performance benchmarks",
    "regression: marks tests that prevent known regressions",
    "external: marks tests that require external services (network, APIs)",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "-ra",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::FutureWarning:pandas.*",
    "ignore::UserWarning:geopandas.*",
] 
